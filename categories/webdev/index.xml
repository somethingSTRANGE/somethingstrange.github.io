<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>WebDev on somethingSTRANGE</title><link>https://somethingstrange.com/categories/webdev/</link><description>Recent content in WebDev on somethingSTRANGE</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>©2025. All content is licensed under<a target='_blank' rel='external noopener' href='https://www.apache.org/licenses/LICENSE-2.0'>Apache License 2.0</a>.</copyright><lastBuildDate>Fri, 28 Jan 2022 17:23:00 -0800</lastBuildDate><atom:link href="https://somethingstrange.com/categories/webdev/index.xml" rel="self" type="application/rss+xml"/><item><title>RegEx Cheatsheet</title><link>https://somethingstrange.com/posts/regex-cheatsheet/</link><pubDate>Fri, 20 Jun 2025 14:20:00 -0700</pubDate><atom:modified>Fri, 20 Jun 2025 17:07:15 -0700</atom:modified><guid>https://somethingstrange.com/posts/regex-cheatsheet/</guid><description>A handy cheatsheet and overview of the syntax for various regular expression flavors and implementations.</description><dc:creator>Michael Ryan</dc:creator><category>regex</category><category>gamedev</category><category>webdev</category></item><item><title>Commenting with Giscus</title><link>https://somethingstrange.com/posts/commenting-with-giscus/</link><pubDate>Wed, 01 Jan 2025 00:00:00 +0000</pubDate><atom:modified>Sat, 15 Feb 2025 23:31:48 -0800</atom:modified><guid>https://somethingstrange.com/posts/commenting-with-giscus/</guid><description>&lt;p>For a while now, this website has been powered by &lt;a href="https://gohugo.io/">Hugo&lt;/a>, a fantastic static site generator that ensures the site content is compiled into static files, making it swift and efficient. As a static website, there is no backend server running scripts, which means fewer points of failure and faster load times.&lt;/p>
&lt;p>I&amp;rsquo;ve been having fun experimenting with CSS and JavaScript to add some dynamic flair, interactive elements, and sleek transitions to bring a modern touch to the site. At its core, however, it&amp;rsquo;s all still a beautifully simple static site.&lt;/p></description><dc:creator>Michael Ryan</dc:creator><category>giscus</category><category>github</category><category>hugo</category><category>webdev</category></item><item><title>Using &lt;use> with Font Awesome SVGs</title><link>https://somethingstrange.com/posts/using-use-with-fontawesome-svgs/</link><pubDate>Sat, 14 Dec 2024 00:00:00 +0000</pubDate><atom:modified>Thu, 26 Jun 2025 11:38:45 -0700</atom:modified><guid>https://somethingstrange.com/posts/using-use-with-fontawesome-svgs/</guid><description>&lt;p>Throughout this site, I use SVG icons by inlining them directly into the page, ensuring immediate availability without unnecessary network calls. Basic inlining would embed data for each SVG separately, even if the same icon is used multiple times, quickly bloating the page with duplicate data. But there&amp;rsquo;s a solution!&lt;/p>
&lt;p>SVGs support the &lt;code>&amp;lt;use&amp;gt;&lt;/code> element, which references and duplicates content from another SVG document. This process effectively clones nodes into a hidden DOM and pastes them where the &lt;code>&amp;lt;use&amp;gt;&lt;/code> element is, similar to how &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template">template elements&lt;/a> are cloned.&lt;/p></description><dc:creator>Michael Ryan</dc:creator><category>font awesome</category><category>hugo</category><category>icons</category><category>webdev</category></item><item><title>Natural Sorting of SemVer Strings in Hugo</title><link>https://somethingstrange.com/posts/natural-sorting-of-semver-strings-in-hugo/</link><pubDate>Thu, 13 Oct 2022 13:25:41 +0700</pubDate><atom:modified>Sat, 15 Feb 2025 23:31:48 -0800</atom:modified><guid>https://somethingstrange.com/posts/natural-sorting-of-semver-strings-in-hugo/</guid><description>&lt;p>Earlier today, I saw a &lt;a href="https://discourse.gohugo.io/t/sorting-semantic-version-numbers/40838">post&lt;/a> on Hugo&amp;rsquo;s Discourse site where someone was asking for a way to sort version numbers with a &lt;a href="https://en.wikipedia.org/wiki/Natural_sort_order">natural sort order&lt;/a> where multi-digit numbers are treated atomically.&lt;/p>
&lt;p>The &lt;a href="https://discourse.gohugo.io/t/sorting-semantic-version-numbers/40838/4">accepted solution&lt;/a> seemed somewhat complicated with the way the versions were split into separate version components (i.e., Major, Minor, Patch, PreRelease), sorted into nested maps, and then merged together again afterward.&lt;/p>
&lt;p>I believe the solution I came up with is a bit more straightforward, and it should be able to sort all SemVer strings. Also, since it doesn&amp;rsquo;t assume the &lt;code>MAJOR.MINOR.PATCH&lt;/code> format, it can also handle version strings with pre-release suffixes, such as &amp;ldquo;beta&amp;rdquo; and &amp;ldquo;rc&amp;rdquo;.&lt;/p></description><dc:creator>Michael Ryan</dc:creator><category>hugo</category><category>webdev</category></item><item><title>Hugo with Font Awesome</title><link>https://somethingstrange.com/posts/hugo-with-fontawesome/</link><pubDate>Thu, 17 Mar 2022 15:01:43 -0700</pubDate><atom:modified>Thu, 26 Jun 2025 11:38:45 -0700</atom:modified><guid>https://somethingstrange.com/posts/hugo-with-fontawesome/</guid><description>&lt;p>&lt;a href="https://fontawesome.com/">Font Awesome&lt;/a> is an icon font widely used across various websites, applications, and projects. I&amp;rsquo;ve been utilizing it for years to develop editor tools for my Unity projects. It&amp;rsquo;s truly awesome.&lt;/p>
&lt;p>One of the first decisions I made as I started building this site with &lt;a href="https://gohugo.io/">Hugo&lt;/a>, a popular open-source static site generator, was to integrate Font Awesome to handle my icon needs. I specifically wanted to use SVGs due to their numerous advantages over traditional font icons. Many &lt;a href="https://cloudfour.com/thinks/seriously-dont-use-icon-fonts/">articles&lt;/a> detail the &lt;a href="https://www.lambdatest.com/blog/its-2019-lets-end-the-debate-on-icon-fonts-vs-svg-icons/">advantages&lt;/a> of SVG icons &lt;a href="https://www.irigoyen.dev/blog/2021/02/17/stop-using-icon-fonts/">over font icons&lt;/a>, so I won’t repeat those here.&lt;/p></description><dc:creator>Michael Ryan</dc:creator><category>font awesome</category><category>hugo</category><category>icons</category><category>webdev</category></item><item><title>Command-Line Syntax Key</title><link>https://somethingstrange.com/posts/command-line-syntax-key/</link><pubDate>Wed, 16 Mar 2022 01:10:00 -0800</pubDate><atom:modified>Fri, 13 Dec 2024 15:27:26 -0800</atom:modified><guid>https://somethingstrange.com/posts/command-line-syntax-key/</guid><description>&lt;p>The following table describes the notation used to indicate command-line syntax.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Notation&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Loose Text&lt;/td>
&lt;td>&lt;em>Required&lt;/em> text that must be typed as shown.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;span class="nowrap">&lt;code>&amp;lt;&lt;/code> … &lt;code>&amp;gt;&lt;/code>&lt;/span>&lt;/td>
&lt;td>Placeholder for a &lt;em>required&lt;/em> value.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;span class="nowrap">&lt;code>[&lt;/code> … &lt;code>]&lt;/code>&lt;/span>&lt;/td>
&lt;td>Set of &lt;em>optional&lt;/em> items.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;span class="nowrap">&lt;code>{&lt;/code> … &lt;code>}&lt;/code>&lt;/span>&lt;/td>
&lt;td>Set of &lt;em>required&lt;/em> items. You must choose one.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>|&lt;/code> (pipe)&lt;/td>
&lt;td>Pipe separator for mutually exclusive items.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;span class=nowrap>&lt;code>...&lt;/code> (ellipsis)&lt;/span>&lt;/td>
&lt;td>Items that can be repeated and used multiple times.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description><dc:creator>Michael Ryan</dc:creator><category>terminal</category><category>gamedev</category><category>webdev</category></item><item><title>A Convenient Caboodle of Unicode Characters</title><link>https://somethingstrange.com/posts/a-convenient-caboodle-of-unicode-characters/</link><pubDate>Tue, 08 Feb 2022 22:55:31 -0800</pubDate><atom:modified>Wed, 28 May 2025 12:54:08 -0700</atom:modified><guid>https://somethingstrange.com/posts/a-convenient-caboodle-of-unicode-characters/</guid><description>Quick access to some useful Unicode characters.</description><dc:creator>Michael Ryan</dc:creator><category>unicode</category><category>gamedev</category><category>webdev</category></item><item><title>An Indent Shortcode for Hugo</title><link>https://somethingstrange.com/posts/hugo-indent-shortcode/</link><pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate><atom:modified>Fri, 13 Dec 2024 17:01:09 -0800</atom:modified><guid>https://somethingstrange.com/posts/hugo-indent-shortcode/</guid><description>&lt;p>Indenting markdown usually isn&amp;rsquo;t difficult, however there could be a few gotchas. Skip down to the end for a quick little Hugo &lt;a href="https://somethingstrange.com/posts/hugo-indent-shortcode/#the-shortcode">shortcode&lt;/a> for inserting indents in markdown.&lt;/p>
&lt;h3 id="the-problem">The Problem&lt;/h3>
&lt;p>Earlier today, I wanted to indent a markdown page element that included a link, but for some reason, the HTML that wrapped the markdown link was breaking the things.&lt;/p>
&lt;p>Search the web for how to &amp;ldquo;indent without adding a bullet or number in markdown&amp;rdquo; and you&amp;rsquo;ll likely come across multiple suggestions that rely on a mix of HTML tags and CSS styles.&lt;/p></description><dc:creator>Michael Ryan</dc:creator><media:content url="https://somethingstrange.com/images/posts/windows-terminal.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>markdown</category><category>Hugo</category><category>shortcode</category><category>webdev</category></item><item><title>The Markdown Grimoire</title><link>https://somethingstrange.com/posts/the-markdown-grimoire/</link><pubDate>Fri, 31 Oct 0730 00:00:00 +0000</pubDate><atom:modified>Mon, 30 Jun 2025 11:59:19 -0700</atom:modified><guid>https://somethingstrange.com/posts/the-markdown-grimoire/</guid><description>&lt;p>&lt;em>Transcribed from the crumbling vellum discovered beneath the shifting sands of Rub&amp;rsquo; al Khali, 730 CE&lt;/em>&lt;/p>
&lt;div class="sidebar-scribble">
&lt;span>The symbols must never be spoken aloud.&lt;/span>&lt;br>
&lt;span>They are not merely syntax — they are summoning.&lt;/span>
&lt;/div>
&lt;p>Bound in a leather not quite animal, stained with the ink of bygone intellects, this manuscript was unearthed from the shattered ruins of a ziggurat whose shape defied Euclidean geometry. It is said that Abdul Alhazred, driven mad by revelations glimpsed beyond the veil of time, encoded forbidden truths in what modern scholars feebly call “Markdown.”&lt;/p></description><dc:creator>Abdul Alhazred</dc:creator><category>markdown</category><category>webdev</category></item></channel></rss>